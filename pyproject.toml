[project]
name = "tarkin"
version = "0.0.1"
description = "Tool for parsing Grand MOF(F)s"
requires-python = ">=3.11"
keywords = [
    "WMI",
    "BMOF"
]
classifiers = [
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: System :: Hardware",
    "Topic :: Utilities",
    "Typing :: Typed"
]
dependencies = [
    "construct ~= 2.10.7"
]

[project.optional-dependencies]
extra = [
    # TODO
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[[project.authors]]
name = "Armin Wolf"
email = "W_Armin@gmx.de"

[project.urls]
Repository = "https://github.com/Wer-Wolf/tarkin"
Bugtracker = "https://github.com/Wer-Wolf/tarkin/issues"

[project.scripts]
eppidtool = "tarkin.main:main_cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.envs.test]
dependencies = [
    "coverage[toml] == 7.*"
]

[tool.hatch.envs.test.scripts]
test = "python -m unittest discover {args}"
cov-run = "coverage run -m unittest discover {args}"
cov-report = [
    "- coverage combine",
    "coverage report"
]
cov = [
    "cov-run",
    "cov-report"
]

[[tool.hatch.envs.test.matrix]]
python = ["3.11", "3.12"]

[tool.hatch.envs.lint]
dependencies = [
    "mypy >= 1.0.0",
    "pylint >= 2.12.2",
    "flake8 >= 5.0.0",
    "isort >= 5.10.1"
]

[tool.hatch.envs.lint.scripts]
lint = [
    "- flake8 src/tarkin",
    "- pylint src/tarkin"
]
typecheck = "mypy -p tarkin"
release = [
    "typecheck"
]

[tool.hatch.build.targets.sdist]
exclude = ["/.github"]

[tool.mypy]
ignore_missing_imports = true
disallow_any_generics = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true

[tool.pylint]
max-line-length = 100

[tool.coverage.run]
source_pkgs = ["tarkin"]
branch = true
parallel = true